name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write
  issues: write
  packages: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: python
          path: package

      - uses: actions/checkout@v3
        if: ${{ steps.release.outputs['package--release_created'] }}

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
        if: ${{ steps.release.outputs['package--release_created'] }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
        if: ${{ steps.release.outputs['package--release_created'] }}

      - name: Poetry install and build
        run: |
          cd package
          poetry install --no-interaction
          poetry build
        if: ${{ steps.release.outputs['package--release_created'] }}

      - name: Publish to PyPI
        run: |
          cd package
          poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
        if: ${{ steps.release.outputs['package--release_created'] }}
